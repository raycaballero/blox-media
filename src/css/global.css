/* 
 * Custom base (or global) styles 
 *
 * By using the '@layer' directive, Tailwind will automatically move those 
 * styles to the same place/layer as '@tailwind base' to avoid unintended specificity issues.
 */
@tailwind base;

@layer base {
    html {
        scroll-behavior: smooth;
        font-family: "Inter";
        @apply overflow-x-hidden;
    }
}

/* 
 * Custom components
 *
 * By using the '@layer' directive, Tailwind will automatically move those 
 * styles to the same place/layer as '@tailwind components' to avoid unintended specificity issues.
 *
 * Using the @layer directive will also instruct Tailwind to consider those 
 * styles for purging when purging the components layer. 
 *
 * @apply directive helps us extract common utility patterns to CSS component classes easily.
 */

@tailwind components;

@layer components {
    .wysiwyg p {
        @apply mb-5;
    }

    .wysiwyg ul {
        @apply list-disc;
    }
    
    .wysiwyg li {
        @apply ml-5;
    }

    /*
    .outline-shadow {
        overflow: visible;
    }

    .outline-shadow:before {
        width: 100%;
        height: 100%;
        padding-right: 1em;
        margin-right: 1em;
        content: '';
        @apply border-2 border-blox-magenta rounded-8xl hidden md:block;
        position: absolute;
        top: 3em;
        left: 3em;
        
        box-shadow: 0 0 .2rem #fff,
            0 0 .2rem #fff,
            0 0 2rem #bc13fe,
            0 0 0.8rem #bc13fe,
            0 0 2.8rem #bc13fe,
            inset 0 0 1.3rem #bc13fe;
    }
    */

    .hero-overlay {
        @apply absolute z-10 h-screen w-screen;
        background: linear-gradient(180deg, rgba(0 ,0, 0, .7) 80%,  rgba(0, 0, 0, 1) 100%);
    }

    .progress-bar {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        height: 5px;
        @apply bg-gradient-to-r from-blox-magenta to-blox-indigo;
        transform-origin: 0%;
    }

    .blob-magenta {
        /* background: black; */
        border-radius: 50%;
        /* box-shadow: 0 0 0 0 rgba(157, 40, 167, 1); */
        margin: 10px;
        height: 20px;
        width: 20px;
        transform: scale(1);
        animation: pulse-magenta 2s infinite;
      }
      
      @keyframes pulse-magenta {
        0% {
          transform: scale(.95);
          opacity: .8;
          /* box-shadow: 0 0 0 0 rgba(157, 40, 167, 0.7); */
        }
        
        70% {
          transform: scale(1);
          opacity: 1;
          /* box-shadow: 0 0 0 10px rgba(157, 40, 167, 0); */
        }
        
        100% {
          transform: scale(.95);
          opacity: .8;
          /* box-shadow: 0 0 0 0 rgba(157, 40, 167, 0); */
        }
      }

    .blob-indigo {
        /* background: black; */
        border-radius: 50%;
        /* box-shadow: 0 0 0 0 rgba(45, 66, 255, 1); */
        margin: 10px;
        height: 20px;
        width: 20px;
        transform: scale(.95);
        animation: pulse-indigo 2s infinite;
      }
      
      @keyframes pulse-indigo {
        0% {
          transform: scale(1);
          opacity: 1;
          /* box-shadow: 0 0 0 0 rgba(45, 66, 255, 0.7); */
        }
        
        70% {
          transform: scale(.95);
          opacity: 0.8;
          /* box-shadow: 0 0 0 10px rgba(45, 66, 255, 0); */
        }
        
        100% {
          transform: scale(1);
          opacity: 1;
          /* box-shadow: 0 0 0 0 rgba(45, 66, 255, 0); */
        }
      }
}

/* 
 * Custom utilities
 *
 * By using the '@layer' directive, Tailwind will automatically move those 
 * styles to the same place/layer as '@tailwind utilities' to avoid unintended specificity issues.
 *
 * Using the @layer directive will also instruct Tailwind to consider those 
 * styles for purging when purging the utilities layer. 
 *
 * Wrap definitions in the '@variants' directive to generate responsive, hover, 
 * focus, active, and other variants of utilities.
 */

@tailwind utilities;

@layer utilities {
    .stroke-strong strong {
        color: #fff;
        -webkit-text-fill-color: transparent;
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: #fff;
        @apply font-semibold
    }

    .stroke-strong.animated strong {
        animation: flicker 1.5s infinite alternate;
    }

    /* Flickering animation */
    @keyframes flicker {
        0%, 18%, 22%, 25%, 53%, 57%, 100% {

            /* Neon text effect */
            text-shadow:
                0 0 4px #fff,
                0 0 11px #fff,
                0 0 19px #fff,
                0 0 40px #2D42FF,
                0 0 80px #2D42FF,
                0 0 90px #2D42FF,
                0 0 100px #2D42FF,
                0 0 150px #2D42FF;
        
        }
        
        20%, 24%, 55% {        
            text-shadow: none;
        }    
    }
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-Thin.ttf");
    font-weight: 100;
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-ExtraLight.ttf");
    font-weight: 200;
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-Light.ttf");
    font-weight: 300;
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-Regular.ttf");
    font-weight: 400;
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-Medium.ttf");
    font-weight: 500;
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-SemiBold.ttf");
    font-style: italic;
    font-weight: 600;
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-Bold.ttf");
    font-weight: 700;
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-ExtraBold.ttf");
    font-style: italic;
    font-weight: 800;
}

@font-face {
    font-family: "Inter";
    src: url("../../static/fonts/Inter/static/Inter-Black.ttf");
    font-weight: 900;
}
